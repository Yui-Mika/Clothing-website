/* hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m, √°p d·ª•ng b·ªô l·ªçc theo danh m·ª•c (category) 
v√† t√¨m ki·∫øm (search query), ƒë·ªìng th·ªùi qu·∫£n l√Ω ph√¢n trang (pagination). */ 
import React, { useContext, useEffect, useState } from "react";
import { ShopContext } from "../context/ShopContext";
import Title from "../components/Title";
import Item from "../components/Item";
import { useParams } from "react-router-dom";

// Qu·∫£n l√Ω State
const CategoryCollection = () => {
  const { products, searchQuery } = useContext(ShopContext); // L·∫•y danh s√°ch s·∫£n ph·∫©m v√† t·ª´ kh√≥a t√¨m ki·∫øm t·ª´ context.
  const [filteredProducts, setFilteredProducts] = useState([]); // M·∫£ng s·∫£n ph·∫©m sau khi ƒë√£ ƒë∆∞·ª£c l·ªçc theo danh m·ª•c v√† t·ª´ kh√≥a t√¨m ki·∫øm.
  const [currentPage, setCurrentPage] = useState(1); //S·ªë trang hi·ªán t·∫°i m√† ng∆∞·ªùi d√πng ƒëang xem (d√πng cho ph√¢n trang).
  const itemsPerPage = 8; // S·ªë l∆∞·ª£ng s·∫£n ph·∫©m hi·ªÉn th·ªã tr√™n m·ªói trang.
  const { category } = useParams();


  // Logic l·ªçc s·∫£n ph·∫©m
  // Ch·ªãu tr√°ch nhi·ªám c·∫≠p nh·∫≠t danh s√°ch s·∫£n ph·∫©m hi·ªÉn th·ªã m·ªói khi d·ªØ li·ªáu ho·∫∑c ƒëi·ªÅu ki·ªán l·ªçc thay ƒë·ªïi
  useEffect(() => {
    let result = products;

    // Filter by category from URL
    if (category) {
      result = result.filter(
        (product) => product.category.toLowerCase() === category.toLowerCase()
      );
    }

    // L·ªçc theo t·ª´ kh√≥a t√¨m ki·∫øm (searchQuery) t·ª´ Context
    if (searchQuery.length > 0) {
      setFilteredProducts(
        (result = result.filter((product) =>
          product.name.toLowerCase().includes(searchQuery.toLowerCase())
        ))
      );
    }
    setFilteredProducts(result);
    setCurrentPage(1); // üîÅ Reset to first page on search/filter change
  }, [products, searchQuery, category]);

  // T√≠nh to√°n t·ªïng s·ªë trang d·ª±a tr√™n s·ªë s·∫£n ph·∫©m ƒë√£ l·ªçc v√† s·ªë s·∫£n ph·∫©m tr√™n m·ªói trang
  // L∆∞u √Ω: ch·ªâ t√≠nh c√°c s·∫£n ph·∫©m c√≤n h√†ng (inStock)
  const totalPages = Math.ceil(
    filteredProducts.filter((p) => p.inStock).length / itemsPerPage
  );

  // Cu·ªôn trang khi chuy·ªÉn trang
  useEffect(() => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  }, [currentPage]);

  // Hi·ªÉn th·ªã giao di·ªán
  return (
    <div className="max-padd-container py-16 pt-28">
      <Title
        title1={`${category}`}
        title2={"Products"}
        titleStyles={"pb-5 capitalize"}
      />
      {/* S·∫£n ph·∫©m v√† ph√¢n trang */}
      {/* Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m */}
      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-3"> {/* S·ª≠ d·ª•ng CSS grid ƒë·ªÉ b·ªë tr√≠ s·∫£n ph·∫©m */}
        {/* Logic hi·ªÉn th·ªã */}
        {filteredProducts.length > 0 ? (
          filteredProducts
            .filter((product) => product.inStock) // Ch·ªâ hi·ªÉn th·ªã s·∫£n ph·∫©m c√≤n h√†ng
            .slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage) // Ch·ªçn s·∫£n ph·∫©m cho trang hi·ªán t·∫°i
            .map((product) => <Item key={product._id} product={product} />)
        ) : (
          <p>Oops! Nothing matched your search.</p> // Tr∆∞·ªùng h·ª£p kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ph√π h·ª£p
        )}
      </div>
      {/* Ph√¢n trang - PAGINATION */}
      <div className="flexCenter flex-wrap gap-4 mt-14 mb-10">
        {/* N√∫t Previous */}
        <button
          disabled={currentPage === 1}
          onClick={() => setCurrentPage((prev) => prev - 1)}
          className={`${
            currentPage === 1 && "opacity-50 cursor-not-allowed"
          } btn-dark !py-1 !px-3`}
        >
          Previous
        </button>
        {/* C√°c n√∫t s·ªë trang */}
        {Array.from({ length: totalPages }, (_, index) => (
          <button
            key={index + 1}
            onClick={() => setCurrentPage(index + 1)}
            className={`${
              currentPage === index + 1 && "!bg-tertiary text-white"
            } btn-light !py-1 !px-3`}
          >
            {index + 1}
          </button>
        ))}
        {/* N√∫t Next */}
        <button
          disabled={currentPage === totalPages}
          onClick={() => setCurrentPage((prev) => prev + 1)}
          className={`${
            currentPage === totalPages && "opacity-50 cursor-not-allowed"
          } btn-dark !py-1 !px-3`}
        >
          Next
        </button>
      </div>
    </div>
  );
};

export default CategoryCollection;
